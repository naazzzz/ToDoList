basePath: /
definitions:
  Entity.TaskDTO:
    properties:
      description:
        type: string
      isFavorite:
        type: boolean
      title:
        type: string
      userId:
        type: integer
    required:
    - description
    - isFavorite
    - title
    - userId
    type: object
  Entity.UserDTO:
    properties:
      password:
        type: string
      username:
        type: string
    required:
    - password
    - username
    type: object
host: localhost:8080
info:
  contact: {}
  description: API Server for TodoList Application
  version: "1.0"
paths:
  /tasks:
    get:
      consumes:
      - application/json
      description: Get Object Collection Task entity
      produces:
      - application/json
      responses: {}
      summary: Get Object Collection Task entity
      tags:
      - Tasks
    post:
      consumes:
      - application/json
      description: Create a new Task entity
      parameters:
      - description: Task info
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/Entity.TaskDTO'
      produces:
      - application/json
      responses: {}
      summary: Create a new Task entity
      tags:
      - Tasks
  /tasks/{id}:
    get:
      consumes:
      - application/json
      description: Get Object item Task entity
      parameters:
      - description: Task ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses: {}
      summary: Get Object item Task entity
      tags:
      - Tasks
    put:
      consumes:
      - application/json
      description: Update Object Task entity
      parameters:
      - description: Task ID
        in: path
        name: id
        required: true
        type: integer
      - description: Task info
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/Entity.TaskDTO'
      produces:
      - application/json
      responses: {}
      summary: Update Object Task entity
      tags:
      - Tasks
  /users:
    get:
      consumes:
      - application/json
      description: Get Object Collection User entity
      produces:
      - application/json
      responses: {}
      security:
      - oauth: []
      summary: Get Object Collection User entity
      tags:
      - Users
    post:
      consumes:
      - application/json
      description: Create a new User entity
      parameters:
      - description: User info
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/Entity.UserDTO'
      produces:
      - application/json
      responses: {}
      summary: Create a new User entity
      tags:
      - Users
  /users/{id}:
    get:
      consumes:
      - application/json
      description: Get Object item User entity
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses: {}
      summary: Get Object item User entity
      tags:
      - Users
    put:
      consumes:
      - application/json
      description: Update Object User entity
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      - description: User info
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/Entity.UserDTO'
      produces:
      - application/json
      responses: {}
      summary: Update Object User entity
      tags:
      - Users
securityDefinitions:
  oauth:
    flow: password
    tokenUrl: /token
    type: oauth2
swagger: "2.0"
